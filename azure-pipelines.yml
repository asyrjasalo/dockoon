trigger: none

pool:
  vmImage: ubuntu-latest
  
variables:
- group: prod.env
- name: azureServiceConnectionName
  value: azure
- name: registryServiceConnectionName
  value: dockerhub
- name: dockerRepositoryUrl
  value: asyrjasalo

stages:
- stage: docker
  displayName: Release Docker image
  jobs:
  - job: alpine
    displayName: Release Alpine image
    steps:
      - task: Bash@3
        displayName: build_and_test_image
        inputs:          
          targetType: inline
          script: |
            docker/build_and_test_image
      - task: Docker@2
        displayName: docker login
        inputs:
          containerRegistry: $(registryServiceConnectionName)
          command: login
      - task: Bash@3
        displayName: tag_and_push_image
        inputs:
          targetType: inline
          script: |
            REGISTRY_URL=$(dockerRepositoryUrl) \
              docker/tag_and_push_image
  - job: debian
    displayName: Release Debian Image
    steps:
      - task: Bash@3
        displayName: build_and_test_image
        inputs:
          targetType: inline
          script: |
            IMAGE_KIND=slimbuster \
              docker/build_and_test_image
      - task: Docker@2
        displayName: docker login
        inputs:
          containerRegistry: dockerhub
          command: login
      - task: Bash@3
        displayName: tag_and_push_image
        inputs:
          targetType: inline
          script: |
            IMAGE_KIND=slimbuster \
            REGISTRY_URL=$(dockerRepositoryUrl) \
              docker/tag_and_push_image
    
- stage: deploy
  displayName: Deploy to Azure
  jobs:
  - job: deploy_to_rg
    displayName: Use Azure CLI with Bicep
    steps:
      - task: AzureCLI@2
        displayName: Create target rg
        inputs:
          azureSubscription: $(azureServiceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az group create \
              --name "$AZ_PREFIX-$AZ_ENVIRONMENT-$AZ_APP-rg" \
              --location "$AZ_LOCATION" \
              --subscription "$AZ_SUBSCRIPTION_ID" \
              --tags app="$AZ_APP" environment="$AZ_ENVIRONMENT" owner="$AZ_OWNER"
          workingDirectory: 'bicep'
      - task: AzureCLI@2
        displayName: Create deployment in rg
        inputs:
          azureSubscription: $(azureServiceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment group create \
              --resource-group "$AZ_PREFIX-$AZ_ENVIRONMENT-$AZ_APP-rg" \
              --template-file main.bicep \
              -p prefix="$AZ_PREFIX" \
              -p environment="$AZ_ENVIRONMENT" \
              -p app="$AZ_APP" \
              -p owner="$AZ_OWNER" \
              -p dns_zone_name="$AZ_DNS_ZONE_NAME" \
              -p dns_zone_rg_name="$AZ_DNS_ZONE_RG_NAME" \
              -p key_vault_name="$AZ_KEY_VAULT_NAME" \
              -p key_vault_rg_name="$AZ_KEY_VAULT_RG_NAME" \
              -p key_vault_cert_name="$AZ_KEY_VAULT_CERT_NAME"
          workingDirectory: 'bicep'
  - job: upload_specs
    displayName: Update Storage Account
    steps:
    - task: AzureCLI@2
      displayName: Upload apis.json
      inputs:
        azureSubscription: $(azureServiceConnectionName)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage file upload \
            --account-name "${AZ_PREFIX}${AZ_ENVIRONMENT}${AZ_APP}sa" \
            --share-name share \
            --source apis.json
    - task: AzureCLI@2
      displayName: Upload openapi.json
      inputs:
        azureSubscription: $(azureServiceConnectionName)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage blob upload \
            --account-name "${AZ_PREFIX}${AZ_ENVIRONMENT}${AZ_APP}sa" \
            --container-name apis \
            --name openapi.json \
            --file openapi.json
