trigger:
- main

pool:
  vmImage: ubuntu-latest
  
variables:
- name: serviceConnectionName
  value: azure
- group: test

stages:
- stage: dockoon
  displayName: Dockoon
  jobs:
  - job: build
    displayName: Build Docker image
    steps:
      - task: Bash@3
        displayName: build_and_test_image
        inputs:
          filePath: docker/build_and_test_image

- stage: bicep
  dependsOn: dockoon
  displayName: Bicep
  jobs:
  - job: deploy
    steps:
      - task: AzureCLI@2
        displayName: Create target rg
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az group create \
              --name "$AZ_PREFIX-$AZ_ENVIRONMENT-$AZ_APP-rg" \
              --location "$AZ_LOCATION" \
              --subscription "$AZ_SUBSCRIPTION_ID" \
              --tags app="$AZ_APP" environment="$AZ_ENVIRONMENT" owner="$AZ_OWNER"
          workingDirectory: 'bicep'
      - task: AzureCLI@2
        displayName: Create deployment in rg
        inputs:
          azureSubscription: $(serviceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment group create \
              --resource-group "$AZ_PREFIX-$AZ_ENVIRONMENT-$AZ_APP-rg" \
              --template-file main.bicep \
              -p prefix="$AZ_PREFIX" \
              -p environment="$AZ_ENVIRONMENT" \
              -p app="$AZ_APP" \
              -p owner="$AZ_OWNER" \
              -p dns_zone_name="$AZ_DNS_ZONE_NAME" \
              -p dns_zone_rg_name="$AZ_DNS_ZONE_RG_NAME" \
              -p key_vault_name="$AZ_KEY_VAULT_NAME" \
              -p key_vault_rg_name="$AZ_KEY_VAULT_RG_NAME" \
              -p key_vault_cert_name="$AZ_KEY_VAULT_CERT_NAME"
          workingDirectory: 'bicep'
  - job: api
    steps:
    - task: AzureCLI@2
      displayName: Upload apis.json
      inputs:
        azureSubscription: $(serviceConnectionName)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage file upload \
            --account-name "${AZ_PREFIX}${AZ_ENVIRONMENT}${AZ_APP}sa" \
            --share-name share \
            --source apis.json
    - task: AzureCLI@2
      displayName: Upload openapi.json
      inputs:
        azureSubscription: $(serviceConnectionName)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage blob upload \
            --account-name "${AZ_PREFIX}${AZ_ENVIRONMENT}${AZ_APP}sa" \
            --container-name apis \
            --name openapi.json \
            --file openapi.json
